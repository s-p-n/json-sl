{
    "inputs": {
        "me": {
            "dodge": 20,
            "offense": 20,
            "parry": 20,
            "defense": "dodge+parry"
        },
        "opponent": {
            "dodge": 40,
            "offense": 40,
            "parry": 20,
            "defense": "dodge+parry"
        }
    },
    "f": 0,
    "hit_difference": 0,
    "hit_chance": {
        "me": "parent.inputs.me",
        "opp": "parent.inputs.opponent",
        "hit_difference": "me.offense - opp.defense",
        "hit_difference if > 84": 84,
        "hit_difference if < 84": -84,
        "f": 0,
        "value": 0,
        "f if hit_difference < 0": "1.006*(-hit_difference) - 0.006*(-hit_difference)^2",
        "value if hit_difference < 0": "50 - parent.f",
        "f if hit_difference >= 0": "1.006*(hit_difference) - 0.006*(hit_difference)^2",
        "value if hit_difference >= 0": "50 + parent.f",
        "parent.f": "f",
        "parent.hit_difference": "hit_difference"
    },
    "roll": "rand(1,100)",
    "band": 5,
    "min": 8,
    "max": 93,
    "hit_chance if < (min + band)": "min + band",
    "value": ".Miss",
    "value if roll < min": ".Hit",
    "value if roll in range(max, 100)": ".Miss",
    "value if roll in range(min,max)": {
        "opp": "parent.inputs.opponent",
        "me": "parent.inputs.me",
        "chance": "parent.hit_chance",
        "band": "parent.band",
        "value": ".Miss",
        "value if parent.roll in range(chance - band, chance + band)": ".Grazing Blow",
        "value if parent.roll < (chance - band)": ".Hit",
        "value if parent.roll > (chance + band)": {
            "opp": "parent.opp",
            "me": "parent.me",
            "roll": "rand(0,opp.defense)",
            "value if roll < opp.parry": ".Parry",
            "value if roll > opp.parry": ".Dodge"
        }
    }
}